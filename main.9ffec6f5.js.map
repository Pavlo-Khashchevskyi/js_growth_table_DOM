{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","field","firstRow","children","firstRowLong","length","appendRow","removeRow","appendColumn","removeColumn","newData","row","collum","addEventListener","e","item","target","closest","classList","removeAttribute","setAttribute","innerHTML","tr","createElement","i","insertAdjacentHTML","insertAdjacentElement","cloneNode"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQH,EAAUE,cAAc,UAChCE,EAAWD,EAAME,SAAS,GAAGA,SAAS,GACtCC,EAAeF,EAASC,SAASE,OAEjCC,EAAYR,EAAUE,cAAc,eACpCO,EAAYT,EAAUE,cAAc,eACpCQ,EAAeV,EAAUE,cAAc,kBACvCS,EAAeX,EAAUE,cAAc,kBAEvCU,EAAU,CACdC,IAAKV,EAAME,SAAS,GAAGA,SAASE,OAChCO,OAAQR,GAGVN,EAAUe,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAOD,EAAEE,OAAOC,QAAQ,WAE1B,GAACF,EAAD,CAIIA,OAAAA,EAAKG,UAAU,IAChB,IAAA,aACCR,GAAgB,KAAhBA,EAAQC,IACV,MAEFD,EAAQC,MACRJ,EAAUY,gBAAgB,YAEN,KAAhBT,EAAQC,KACVI,EAAKK,aAAa,WAAY,QAEhC,MAEG,IAAA,aACCV,GAAgB,IAAhBA,EAAQC,IACV,MAEFD,EAAQC,MACRL,EAAUa,gBAAgB,YAEN,IAAhBT,EAAQC,KACVI,EAAKK,aAAa,WAAY,QAEhC,MAEG,IAAA,gBACCV,GAAmB,KAAnBA,EAAQE,OACV,MAEFF,EAAQE,SACRH,EAAaU,gBAAgB,YAEN,KAAnBT,EAAQE,QACVG,EAAKK,aAAa,WAAY,QAEhC,MAEG,IAAA,gBACCV,GAAmB,IAAnBA,EAAQE,OACV,MAEFF,EAAQE,SACRJ,EAAaW,gBAAgB,YAEN,IAAnBT,EAAQE,QACVG,EAAKK,aAAa,WAAY,QAKpCnB,EAAMoB,UAAY,GAIb,IAFCC,IAAAA,EAAKvB,SAASwB,cAAc,MAEzBC,EAAI,EAAGA,EAAId,EAAQE,OAAQY,IAClCF,EAAGG,mBAAmB,YAAtB,yBAKG,IAAA,IAAID,EAAI,EAAGA,EAAId,EAAQC,IAAKa,IAC/BvB,EAAMyB,sBAAsB,YAAaJ,EAAGK,WAAU","file":"main.9ffec6f5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst field = container.querySelector('.field');\nconst firstRow = field.children[0].children[0];\nconst firstRowLong = firstRow.children.length;\n\nconst appendRow = container.querySelector('.append-row');\nconst removeRow = container.querySelector('.remove-row');\nconst appendColumn = container.querySelector('.append-column');\nconst removeColumn = container.querySelector('.remove-column');\n\nconst newData = {\n  row: field.children[0].children.length,\n  collum: firstRowLong,\n};\n\ncontainer.addEventListener('click', e => {\n  const item = e.target.closest('.button');\n\n  if (!item) {\n    return;\n  }\n\n  switch (item.classList[0]) {\n    case 'append-row':\n      if (newData.row === 10) {\n        break;\n      }\n      newData.row++;\n      removeRow.removeAttribute('disabled');\n\n      if (newData.row === 10) {\n        item.setAttribute('disabled', 'true');\n      }\n      break;\n\n    case 'remove-row':\n      if (newData.row === 2) {\n        break;\n      }\n      newData.row--;\n      appendRow.removeAttribute('disabled');\n\n      if (newData.row === 2) {\n        item.setAttribute('disabled', 'true');\n      }\n      break;\n\n    case 'append-column':\n      if (newData.collum === 10) {\n        break;\n      }\n      newData.collum++;\n      removeColumn.removeAttribute('disabled');\n\n      if (newData.collum === 10) {\n        item.setAttribute('disabled', 'true');\n      }\n      break;\n\n    case 'remove-column':\n      if (newData.collum === 2) {\n        break;\n      }\n      newData.collum--;\n      appendColumn.removeAttribute('disabled');\n\n      if (newData.collum === 2) {\n        item.setAttribute('disabled', 'true');\n      }\n      break;\n  }\n\n  field.innerHTML = '';\n\n  const tr = document.createElement('tr');\n\n  for (let i = 0; i < newData.collum; i++) {\n    tr.insertAdjacentHTML('beforeend', `\n    <td></td>\n    `);\n  }\n\n  for (let i = 0; i < newData.row; i++) {\n    field.insertAdjacentElement('beforeend', tr.cloneNode(true));\n  }\n});\n"]}